/*
 * Copyright 2016 <Admobilize>
 * All rights reserved.
 */

syntax = "proto3";

package admobilize_vision;

import "vision.proto";


message DetectionRequest {
  // Image for the request.
  bytes image = 1;
  // What kind of detections do we want?
  repeated EnumDetectionTag detection = 2;
  // What specific detections do we want for face detection ?
  repeated EnumFacialRecognitionTag facial_recognition = 3;
}

// We'll start with a generic service and endpoints that can be used for different
// cases. If we do this and keep the enpoints limited (minimize the amount of
// them), we can end up with pluggable components that let us create flexible
// pipelines that combine local/remote processing.

service VisionService {
  rpc Detect(DetectionRequest) returns (VisionResult);
}
